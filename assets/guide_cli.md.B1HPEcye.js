import{_ as t,c as o,o as d,ae as a}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"CLI","description":"","frontmatter":{},"headers":[],"relativePath":"guide/cli.md","filePath":"guide/cli.md"}'),c={name:"guide/cli.md"};function s(n,e,i,r,l,p){return d(),o("div",null,e[0]||(e[0]=[a(`<h1 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-label="Permalink to &quot;CLI&quot;">​</a></h1><p>If you use esm, the executable must be changed from <code>typeorm-extension</code> to <code>typeorm-extension-esm</code>. The following commands are available in the terminal:</p><ul><li><code>typeorm-extension db:create</code> to create the database</li><li><code>typeorm-extension db:drop</code> to drop the database</li><li><code>typeorm-extension seed:run</code> seed the database</li><li><code>typeorm-extension seed:create</code> to create a new seeder</li></ul><p>If the application has not yet been built or is to be tested with ts-node, the commands can be adapted as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;db:create&quot;: &quot;ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:create&quot;,</span></span>
<span class="line"><span>    &quot;db:drop&quot;: &quot;ts-node ./node_modules/typeorm-extension/bin/cli.cjs db:drop&quot;,</span></span>
<span class="line"><span>    &quot;seed:run&quot;: &quot;ts-node ./node_modules/typeorm-extension/bin/cli.cjs seed:run&quot;,</span></span>
<span class="line"><span>    &quot;seed:create&quot;: &quot;ts-node ./node_modules/typeorm-extension/bin/cli.cjs seed:create&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>To test the application in the context of an esm project, the following adjustments must be made:</p><ul><li>executable <code>ts-node</code> to <code>ts-node-esm</code></li><li>library path <code>cli.cjs</code> to <code>cli.mjs</code></li></ul><p>Read the <a href="./seeding.html#configuration">Seeding Configuration</a> section to find out how to specify the path, for the seeder- &amp; factory-location.</p><h4 id="cli-options" tabindex="-1">CLI Options <a class="header-anchor" href="#cli-options" aria-label="Permalink to &quot;CLI Options&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Option</th><th>Commands</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--root</code> or <code>-r</code></td><td><code>db:create</code>, <code>db:drop</code>, <code>seed:create</code> &amp; <code>seed:run</code></td><td><code>process.cwd()</code></td><td>Root directory of the project.</td></tr><tr><td><code>--dataSource</code> or <code>-d</code></td><td><code>db:create</code>, <code>db:drop</code> &amp; <code>seed:run</code></td><td><code>data-source</code></td><td>Name (or relative path incl. name) of the data-source file.</td></tr><tr><td><code>--synchronize</code> or <code>-s</code></td><td><code>db:create</code></td><td><code>yes</code></td><td>Synchronize the database schema after database creation. Options: <code>yes</code> or <code>no</code>.</td></tr><tr><td><code>--initialDatabase</code></td><td><code>db:create</code></td><td><code>undefined</code></td><td>Specify the initial database to connect to. This option is only relevant for the <code>postgres</code> driver, which must always to connect to a database. If no database is provided, the database name will be equal to the connection user name.</td></tr><tr><td><code>--name</code></td><td><code>seed:create</code> &amp; <code>seed:run</code></td><td><code>undefined</code></td><td>Name (or relative path incl. name) of the seeder.</td></tr><tr><td><code>--preserveFilePaths</code></td><td><code>db:create</code>, <code>db:drop</code>, <code>seed:create</code> &amp; <code>seed:run</code></td><td><code>false</code></td><td>This option indicates if file paths should be preserved and treated as if the just-in-time compilation environment is detected.</td></tr></tbody></table>`,10)]))}const m=t(c,[["render",s]]);export{u as __pageData,m as default};
